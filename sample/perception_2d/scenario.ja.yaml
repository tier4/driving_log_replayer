ScenarioFormatVersion: 3.0.0
ScenarioName: perception_2d_x2
ScenarioDescription: perception_2d_x2
SensorModel: aip_x2
VehicleModel: gsm8
Evaluation:
  UseCaseName: perception_2d
  UseCaseFormatVersion: 0.3.0
  Datasets:
    - f72e1065-7c38-40fe-a4e2-c5bbe6ff6443:
        VehicleId: ps1/20210620/CAL_000015 # データセット毎にVehicleIdを指定する
        LaunchSensing: false # データセット毎にsensing moduleを起動するかを指定する
  Conditions:
    PassRate: 99.0 # 評価試行回数の内、どの程度(%)評価成功だったら成功とするか
    CriteriaMethod: num_gt_tp # refer https://github.com/tier4/log_evaluator/blob/develop/log_evaluator/log_evaluator/criteria/perception.py#L136-L152
    CriteriaLevel: easy # クライテリアレベル(perfect/hard/normal/easy、もしくはカスタム値[0.0, 100.0])
    TargetCameras: # 評価対象のカメラの種類をキーに、カメラの番号を値として記述する
      cam_front: 0
      cam_front_right: 1
  PerceptionEvaluationConfig:
    evaluation_config_dict:
      evaluation_task: detection2d # detection2d # 現時点ではdetection2dにしか対応していない。今後の拡張でtracking2dにも対応予定
      center_distance_thresholds: [100, 200] # 中心間距離マッチング時の閾値。カメラ画像上のピクセルで指定する
      iou_2d_thresholds: [0.5] # 2D IoU マッチング時の閾値
      target_labels: [car, truck, bicycle, pedestrian, motorbike] # 評価ラベル
      ignore_attributes: [cycle_state.without_rider] # 指定した属性を持つラベルを無視する。t4_datasetのattribute.jsonのnameを指定する
      allow_matching_unknown: true # ラベルがunknownのオブジェクトとマッチングさせるか
      merge_similar_labels: false # 類似のラベルをマージするか https://github.com/tier4/autoware_perception_evaluation/blob/develop/docs/ja/perception/label.md#%E9%A1%9E%E4%BC%BC%E3%83%A9%E3%83%99%E3%83%AB%E3%81%AE%E3%83%9E%E3%83%BC%E3%82%B8
  CriticalObjectFilterConfig:
    target_labels: [car, truck, bicycle, pedestrian, motorbike] # 評価対象ラベル名
    ignore_attributes: [cycle_state.without_rider] # 指定した属性を持つラベルを無視する。t4_datasetのattribute.jsonのnameを指定する
  PerceptionPassFailConfig:
    target_labels: [car, truck, bicycle, pedestrian, motorbike]
    matching_threshold_list: [0.5, 0.5, 0.5, 0.5]
